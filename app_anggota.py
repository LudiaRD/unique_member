# -*- coding: utf-8 -*-
"""app_anggota.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HrwtjZGmRB8uKi2JIsJg2n0YTIMgB8I5
"""

import streamlit as st
import pandas as pd
from io import BytesIO

st.set_page_config(page_title = "Filter Dua File Excel", layout = "wide")

st.title("🔍Filter dan Temukan Data Unik Antara Dua File")

st.markdown("""
Unggah dua file Excel atau CSV, pilih kolom kunci perbandingan, lalu lihat dan unduh data unik yang hanya ada di salah satu file.
""")

def read_file(file):
    try:
        if file.name.endswith('.csv'):
            return pd.read_csv(file, encoding='utf-8', on_bad_lines='skip')
        elif file.name.endswith('.xlsx'):
            return pd.read_excel(file)
        else:
            st.error("❌ Format file tidak dikenali. Harap upload file CSV atau Excel.")
            return pd.DataFrame()
    except Exception as e:
        st.error(f"❌ Gagal membaca file: {e}")
        return pd.DataFrame()

file1 = st.file_uploader("📁 Upload File 1", type = ["xlsx", "csv"], key = "file1")
file2 = st.file_uploader("📁 Upload File 2", type = ["xlsx", "csv"], key = "file2")

if file1 and file2:
    df1 = read_file(file1)
    df2 = read_file(file2)

    if df1.empty or df2.empty:
        st.warning("🚫 Salah satu file kosong atau gagal dibaca.")
    else:
        kolom_kunci = st.selectbox("🔑 Pilih Kolom Kunci untuk Perbandingan", common_cols)

        unik_di_file1 = df1[~df1[kolom_kunci].isin(df2[kolom_kunci])]
        unik_di_file2 = df2[~df2[kolom_kunci].isin(df1[kolom_kunci])]

        tab1, tab2 = st.tabs(["📄 Data Unik dari File 1", "📄 Data Unik dari File 2"])

        with tab1:
            st.write(f"Jumlah baris unik dari File 1: {len(unik_di_file1)}")
            st.dataframe(unik_di_file1)

        with tab2:
            st.write(f"Jumlah baris unik dari File 2: {len(unik_di_file2)}")
            st.dataframe(unik_di_file2)

        def to_excel(df):
            output = BytesIO()
            with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
                df.to_excel(writer, index=False, sheet_name='DataUnik')
            return output.getvalue()

        st.download_button(
            "⬇️ Unduh Data Unik File 1",
            data = to_excel(unik_di_file1),
            file_name = "data_unik_file1.xlsx",
            mime = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )

        st.download_button(
            "⬇️ Unduh Data Unik File 2",
            data = to_excel(unik_di_file2),
            file_name = "data_unik_file2.xlsx",
            mime = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )
